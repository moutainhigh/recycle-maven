<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianjiu.mapper.user.UserMapper">
	<resultMap id="userResultMap" type="com.lianjiu.model.User">
		<id column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_nickname" property="userNickname"
			jdbcType="VARCHAR" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_created" property="userCreated" jdbcType="TIMESTAMP" />
		<result column="user_logined" property="userLogined" jdbcType="TIMESTAMP" />
		<result column="user_details_id" property="userDetailsId"
			jdbcType="VARCHAR" />
		<result column="user_photo" property="userPhoto" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectByPrimaryKey" resultMap="userResultMap"
		parameterType="java.lang.String">select * from user where user_id =
		#{userId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user
		where user_id = #{userId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.lianjiu.model.User">
		insert into user (user_id,
		username, user_password,
		user_nickname, user_phone, user_created,
		user_logined, user_details_id, user_photo
		)
		values
		(#{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR},
		#{userNickname,jdbcType=VARCHAR},
		#{userPhone,jdbcType=VARCHAR}, #{userCreated,jdbcType=TIMESTAMP},
		#{userLogined,jdbcType=TIMESTAMP}, #{userDetailsId,jdbcType=VARCHAR},
		#{userPhoto,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.lianjiu.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="userNickname != null">
				user_nickname,
			</if>
			<if test="userPhone != null">
				user_phone,
			</if>
			<if test="userCreated != null">
				user_created,
			</if>
			<if test="userLogined != null">
				user_logined,
			</if>
			<if test="userDetailsId != null">
				user_details_id,
			</if>
			<if test="userPhoto != null">
				user_photo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNickname != null">
				#{userNickname,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				#{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userCreated != null">
				#{userCreated,jdbcType=TIMESTAMP},
			</if>
			<if test="userLogined != null">
				#{userLogined,jdbcType=TIMESTAMP},
			</if>
			<if test="userDetailsId != null">
				#{userDetailsId,jdbcType=VARCHAR},
			</if>
			<if test="userPhoto != null">
				#{userPhoto,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.lianjiu.model.User">
		update user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNickname != null">
				user_nickname = #{userNickname,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				user_phone = #{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userCreated != null">
				user_created = #{userCreated,jdbcType=TIMESTAMP},
			</if>
			<if test="userLogined != null">
				user_logined = #{userLogined,jdbcType=TIMESTAMP},
			</if>
			<if test="userDetailsId != null">
				user_details_id = #{userDetailsId,jdbcType=VARCHAR},
			</if>
			<if test="userPhoto != null">
				user_photo = #{userPhoto,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lianjiu.model.User">
		update user
		set
		username = #{username,jdbcType=VARCHAR},
		user_password =
		#{userPassword,jdbcType=VARCHAR},
		user_nickname =
		#{userNickname,jdbcType=VARCHAR},
		user_phone =
		#{userPhone,jdbcType=VARCHAR},
		user_created =
		#{userCreated,jdbcType=TIMESTAMP},
		user_logined =
		#{userLogined,jdbcType=TIMESTAMP},
		user_details_id =
		#{userDetailsId,jdbcType=VARCHAR},
		user_photo =
		#{userPhoto,jdbcType=VARCHAR}
		where user_id =
		#{userId,jdbcType=VARCHAR}
	</update>
	<sql id="sql_limit">
		<if test="pageTotalNum !=0 and begin != null and pageTotalNum != null">limit #{begin},#{pageTotalNum}</if>
	</sql>
	<sql id="sql_where">
		<if test="model == null and id != null">
			<where>AND user_id=#{id}</where>
		</if>
		<if test="model != null">
			<where>
				<if test="model.userId != null">AND user_id =#{model.userId}</if>
				<if test="model.username != null">AND username =#{model.username}</if>
				<if test="model.userPassword != null">AND user_password =#{model.userPassword}</if>
				<if test="model.userNickname != null">AND user_nickname =#{model.userNickname}</if>
				<if test="model.userPhone != null">AND user_phone =#{model.userPhone}</if>
				<if test="model.userCreated != null">AND user_created =#{model.userCreated}</if>
				<if test="model.userLogined != null">AND user_logined =#{model.userLogined}</if>
				<if test="model.userDetailsId != null">AND user_details_id =#{model.userDetailsId}</if>
				<if test="model.userPhoto != null">AND user_photo =#{model.userPhoto}</if>
			</where>
		</if>
	</sql>
	<select id="selectBySearchObjecVo" parameterType="com.lianjiu.model.vo.SearchObjecVo"
		resultMap="userResultMap">
		select * from user
		<include refid="sql_where" />
		<include refid="sql_limit" />
	</select>
	<!--查询所有用户 -->
	<resultMap id="userViewResultMap" type="com.lianjiu.model.vo.UserCustom">
		<id column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_created" property="userCreated" jdbcType="TIMESTAMP" />
		<result column="user_details_id" property="userDetailsId"
			jdbcType="VARCHAR" />
		<result column="wechat_nickname" property="wechatNickname"
			jdbcType="VARCHAR" />
		<result column="qq_nickname" property="qqNickname" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectAllUser" resultMap="userViewResultMap">
		select
		u.user_id,u.user_phone,u.user_created,u.user_details_id,
		w.wechat_nickname,q.qq_nickname
		from user u
		LEFT JOIN wechat w
		ON
		u.user_id=w.user_id
		LEFT JOIN qq q
		ON u.user_id=q.user_id 
		ORDER BY u.user_created DESC
	</select>
	<!-- 用户详情 -->
	<resultMap id="detailsResultMap" type="com.lianjiu.model.UserDetails">
		<id column="udetails_id" property="udetailsId" jdbcType="VARCHAR" />
		<result column="udetails_id_card" property="udetailsIdCard"
			jdbcType="VARCHAR" />
		<result column="udetails_user_address" property="udetailsUserAddress"
			jdbcType="VARCHAR" />
		<result column="udetails_realname_time" property="udetailsRealnameTime"
			jdbcType="TIMESTAMP" />
		<result column="udetails_card_no" property="udetailsCardNo"
			jdbcType="VARCHAR" />
		<result column="udetails_card_bank" property="udetailsCardBank"
			jdbcType="VARCHAR" />
		<result column="udetails_integral" property="udetailsIntegral"
			jdbcType="INTEGER" />
		<result column="udetails_account_balance" property="udetailsAccountBalance"
			jdbcType="INTEGER" />
		<result column="udetails_money_details" property="udetailsMoneyDetails"
			jdbcType="VARCHAR" />
		<result column="udetails_register_time" property="udetailsRegisterTime"
			jdbcType="TIMESTAMP" />
		<result column="udetails_equipment" property="udetailsEquipment"
			jdbcType="VARCHAR" />
		<result column="udetails_edition" property="udetailsEdition"
			jdbcType="VARCHAR" />
		<result column="udetails_referrer" property="udetailsReferrer"
			jdbcType="VARCHAR" />
		<result column="udetails_photo" property="udetailsPhoto"
			jdbcType="VARCHAR" />
		<result column="coupon_id" property="couponId" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_phonenum" property="userPhonenum"
			jdbcType="INTEGER" />
		<result column="user_openid" property="userOpenid" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectByDetailsId" resultMap="detailsResultMap">
		select * from
		user_details where udetails_id = #{value}
	</select>

</mapper>