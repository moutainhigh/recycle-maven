<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianjiu.rest.mapper.user.UserRoleMapper">
	<resultMap id="userRoleResultMap" type="com.lianjiu.model.UserRole">
		<id column="user_role_id" property="userRoleId" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectByPrimaryKey" resultMap="userRoleResultMap"
		parameterType="java.lang.String">select * from user_role where user_role_id =
		#{userRoleId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		user_role
		where user_role.user_role_id = #{userRoleId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByRoleId" parameterType="java.lang.String">
		delete from
		user_role
		where user_role.role_id = #{roleId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByUserId" parameterType="java.lang.String">
		delete from
		user_role
		where user_role.user_id = #{userId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.lianjiu.model.UserRole">
		insert into user_role
		(user_role_id, user_id, role_id
		)
		values
		(#{userRoleId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
		#{roleId,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.lianjiu.model.UserRole">
		insert into user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userRoleId != null">
				user_role_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userRoleId != null">
				#{userRoleId,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.lianjiu.model.UserRole">
		update user_role
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=VARCHAR},
			</if>
		</set>
		where user_role_id = #{userRoleId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lianjiu.model.UserRole">
		update user_role
		set user_id = #{userId,jdbcType=VARCHAR},
		role_id =
		#{roleId,jdbcType=VARCHAR}
		where user_role_id =
		#{userRoleId,jdbcType=VARCHAR}
	</update>
	<sql id="sql_limit">
		<if test="pageTotalNum !=0 and begin != null and pageTotalNum != null">limit #{begin},#{pageTotalNum}</if>
	</sql>
	<sql id="sql_where">
		<if test="model == null and id != null">
			<where>AND user_role_id=#{id}</where>
		</if>
		<if test="model != null">
			<where>
				<if test="model.userRoleId != null">AND user_role_id =#{model.userRoleId}</if>
				<if test="model.userId != null">AND user_id =#{model.userId}</if>
				<if test="model.roleId != null">AND role_id =#{model.roleId}</if>
			</where>
		</if>
	</sql>
	<select id="selectBySearchObjecVo" parameterType="com.lianjiu.model.vo.SearchObjecVo"
		resultMap="userRoleResultMap">
		select * from user_role
		<include refid="sql_where" />
		<include refid="sql_limit" />
	</select>
</mapper>